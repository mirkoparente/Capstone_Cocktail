@model WebApplication1.Models.Recensioni


@if (User.IsInRole("Admin"))
            {

}
else { 


using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<section class="mt-5 py-5">
    <div class="row row-cols-3 d-flex justify-content-center">
        <div class="col-md-10 col-xl-8 text-center">
            <h3 class="mb-4">Aggiungi Recensione</h3>
        </div>
    </div>

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(m => m.IdProdotti)
    @Html.HiddenFor(m => m.DataCommento)

    <div class="form-group">
        <div class="form-outline mb-3">
            @Html.LabelFor(model => model.Valutazione, new { @class = "form-label" })
            @Html.DropDownList("valutazione", new SelectList(ViewBag.valutazione, "Value", "Text"), new { @class = "form-select" })
        </div>
        @Html.ValidationMessageFor(model => model.Valutazione, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        <div class="form-outline mb-3">
            @Html.TextAreaFor(model => model.Commento, new { @class = "form-control border border-1", @rows ="5" } )
            @Html.LabelFor(model => model.Commento, new { @class = "form-label" })
        </div>
        @Html.ValidationMessageFor(model => model.Commento, "", new { @class = "text-danger" })
    </div>


    @if (User.Identity.IsAuthenticated)
    {



        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Invia" class="btn btn-dark" />
            </div>
        </div>
    }
    else
    {
        <a href="@Url.Action("Login","Account")" class="btn btn-dark">
            Accedi
        </a>
    }
</section>
    }
}

