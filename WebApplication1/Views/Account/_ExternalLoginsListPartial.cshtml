@model WebApplication1.Models.ExternalLoginListViewModel
@using Microsoft.Owin.Security

@{
    var loginProviders = Context.GetOwinContext().Authentication.GetExternalAuthenticationTypes();
    if (loginProviders.Count() == 0) {
        <div>
            <p>
                Non sono configurati servizi di autenticazione esterni. Vedere <a href="https://go.microsoft.com/fwlink/?LinkId=403804">questo articolo</a>
                per informazioni su come configurare l'applicazione ASP.NET per il supporto dell'accesso tramite servizi esterni.
            </p>
        </div>
    }
    else {
        using (Html.BeginForm("ExternalLogin", "Account", new { ReturnUrl = Model.ReturnUrl }, FormMethod.Post, new { role = "form" })) {
            @Html.AntiForgeryToken()
            <div id="socialLoginList">
                <p>

                    @* creo il bottone di accesso *@
                    @foreach (AuthenticationDescription p in loginProviders)
                    {
                        if (p.AuthenticationType == "Google")
                        {

                            <button type="submit" class="btn btn-dark mt-4 rounded-pill" id="@p.AuthenticationType" name="provider" value="@p.AuthenticationType" title="Accedi con l'account @p.Caption"><span><i class="fa-brands fa-google me-3"></i></span>Accedi con @p.AuthenticationType</button>
                        }
                        else if (p.AuthenticationType == "Facebook")
                        {
                            <button type="submit" class="btn btn-dark mt-4 rounded-pill" id="@p.AuthenticationType" name="provider" value="@p.AuthenticationType" title="Accedi con l'account @p.Caption"><span><i class="fa-brands fa-facebook-f me-3"></i></span>Accedi con @p.AuthenticationType</button>

                        }
                    }
                </p>
            </div>
        }
    }
}
